{"version":3,"sources":["components/TodoForm.js","components/DeleteBtn.js","components/InlineForm.js","lib/UseInterval.js","lib/LocalStorage.js","lib/TimeExp.js","components/Timer.js","components/DoneList.js","lib/GroupBy.js","lib/DndLib.js","Dnd.js","App.js","index.js"],"names":["getId","newId","Date","now","Math","ceil","random","JSON","stringify","getDate","date","month","getMonth","day","TodoForm","state","id","content","handleChange","e","setState","target","value","handleSubmit","props","from","onCreate","preventDefault","className","onSubmit","this","type","placeholder","name","required","autoComplete","onChange","htmlFor","Component","DeleteBtn","onClick","onRemove","InlineForm","item","onUpdate","onBlur","autoFocus","useInterval","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","save","LSkey","localStorage","setItem","load","loaded","getItem","parse","setTwoDigit","num","timeToMmSs","time","seperate","hour","floor","min","sec","getTime","getHours","amPm","hour12","getMinutes","TimerOn","useState","count","setCount","timeIn","setTimeIn","timeOutCount","setTimeOutCount","TimerOff","Timer","doing","onTimer","timerOn","setTimerOn","ing","setIng","setLoaded","init","handleTimer","getTimeStamp","start","end","DoneGroup","editing","setEditing","editingId","setEditingId","handleToggleEdit","parseInt","handleUpdate","data","map","index","key","onDoubleClick","startTime","endTime","timeGap","groupedArray","sortedDones","sort","a","b","array","reduce","objectsByKeyValue","obj","concat","reorder","list","startIndex","endIndex","result","Array","splice","removed","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","droppableId","getListClass","isDraggingOver","listLength","join","getItemClass","isDragging","todoLS","doneLS","Dnd","todos","doings","dones","handleCreate","handleRemove","filter","info","getGroupedList","groupByDate","Object","keys","dataset","rbdDraggableId","handleToggleTimeon","boolean","id2List","todo","getList","onDragEnd","provided","snapshot","ref","innerRef","draggableId","draggableProps","dragHandleProps","style","length","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e830ae0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './../style.css';\n\nconst getId = () => {\n  let newId = Date.now() + Math.ceil(Math.random() * 100);\n  newId = JSON.stringify(newId);\n  return newId;\n};\n\nfunction getDate() {\n  const date = new Date(),\n    month = date.getMonth() + 1,\n    day = date.getDate();\n  return `${month}월 ${day}일`;\n}\n\nclass TodoForm extends Component {\n  state = {\n    id: '',\n    content: '',\n    date: getDate(),\n  };\n\n  handleChange = e => {\n    this.setState({\n      content: e.target.value,\n      id: getId(),\n    });\n  };\n\n  handleSubmit = e => {\n    const { from, onCreate } = this.props;\n    e.preventDefault();\n    onCreate(this.state, from);\n    this.setState({\n      id: '',\n      content: '',\n    });\n  };\n\n  render() {\n    return (\n      <form className=\"todo-form__group field\" onSubmit={this.handleSubmit}>\n        <input\n          type=\"input\"\n          className=\"todo-form__field\"\n          placeholder=\"할 일을 입력해주세요\"\n          name=\"content\"\n          id=\"name\"\n          required\n          autoComplete=\"off\"\n          value={this.state.content}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"name\" className=\"todo-form__label\">\n          {this.state.date}, 할 일을 입력해주세요\n        </label>\n      </form>\n    );\n  }\n}\n\nexport default TodoForm;\n","import React from 'react';\nimport './../style.css';\n\nconst DeleteBtn = (props) => {\n  const handleRemove = e => {\n    const { id, from, onRemove } = props;\n    onRemove(id, from);\n  };\n\n    return (\n      <button className=\"delete__btn\" onClick={handleRemove}>\n        삭제\n      </button>\n    );\n}\n\nexport default DeleteBtn;\n","import React, { Component } from 'react';\nimport './../style.css';\n\nclass InlineForm extends Component {\n  state = {\n    id: '',\n    content: this.props.item.content\n  };\n\n  handleChange = (id, e) => {\n    this.setState({\n      content: e.target.value,\n      id: id,\n    });\n  };\n\n  handleSubmit = e => {\n    const { from, onUpdate } = this.props;\n    e.preventDefault();\n    onUpdate(this.state, from);\n    this.setState({\n      id: '',\n      content: '',\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} onBlur={this.handleSubmit}>\n        <input\n        autoFocus=\"on\"\n          type=\"input\"\n          className=\"inline__field\"\n          autoComplete=\"none\"\n          value={this.state.content}\n          onChange={e => this.handleChange(this.props.item.id, e)}\n        />\n      </form>\n    );\n  }\n}\n\nexport default InlineForm;\n","import { useEffect, useRef } from 'react';\n\nconst useInterval = (callback, delay) => {\n    const savedCallback = useRef();\n  \n    // Remember the latest function.\n    useEffect(() => {\n      savedCallback.current = callback;\n    }, [callback]);\n  \n    // Set up the interval.\n    useEffect(() => {\n      function tick() {\n        savedCallback.current();\n      }\n      if (delay !== null) {\n        let id = setInterval(tick, delay);\n        return () => clearInterval(id);\n      }\n    }, [delay]);\n  };\n\n  export default useInterval;\n","const save = (LSkey, content) => {\n  localStorage.setItem(LSkey, JSON.stringify(content));\n};\n\nconst load = LSkey => {\n  const loaded = localStorage.getItem(LSkey);\n  return loaded !== null ? JSON.parse(loaded) : []\n};\n\nexport { save, load };\n","const setTwoDigit = num => {\n  return num < 10 ? '0' + num : num;\n};\n\nconst timeToMmSs = (time, seperate) => {\n  const hour = setTwoDigit(Math.floor(time / 3600000));\n  const min = setTwoDigit(Math.floor((time % 3600000) / 60000));\n  const sec = setTwoDigit(Math.floor((time % 60000) / 1000));\n  if (seperate === 'text') {\n    return `${hour > 0 ? `${hour}시간 ` : ''}${min}분 ${sec}초`;\n    // return `${hour > 0 ? `${hour}시간 ` : ''}${min}분`;\n  } else if (seperate === ':') {\n    return `${hour > 0 ? `${hour}:` : ''}${min}:${sec}`;\n    // return `${hour > 0 ? `${hour}:` : ''}${min}`;\n  }\n};\n\nconst getTime = (time, seperate) => {\n  const date = new Date(time),\n    hour = date.getHours(),\n    amPm = hour < 13 ? '오전' : '오후',\n    hour12 = setTwoDigit(amPm === '오전' ? hour : hour - 12),\n    min = setTwoDigit(date.getMinutes());\n    // sec = setTwoDigit(date.getSeconds());\n\n  if (seperate === 'text') {\n    // return `${amPm} ${hour > 0 ? `${hour12}시 ` : ''}${min}분 ${sec}초`;\n    return `${amPm} ${hour > 0 ? `${hour12}시 ` : ''}${min}분`;\n  } else if (seperate === ':') {\n    // return `${amPm} ${hour > 0 ? `${hour12}:` : ''}${min}:${sec}`;\n    return `${amPm} ${hour > 0 ? `${hour12}:` : ''}${min}`;\n  }\n};\n\nconst timeGap = (startTime, endTime) => {\n  const start = parseInt(startTime);\n  const end = parseInt(endTime);\n  const gap = end - start;\n  return gap;\n};\n\nexport { getTime, timeToMmSs, timeGap };\n","import React, { useState, useEffect } from 'react';\nimport './../style.css';\nimport useInterval from './../lib/UseInterval';\nimport { save, load } from './../lib/LocalStorage';\nimport { timeToMmSs } from './../lib/TimeExp';\n\nconst doneLS = 'DONE';\n\nconst TimerOn = ({ onClick }) => {\n  const [count, setCount] = useState(1500000);\n  const [timeIn, setTimeIn] = useState(true);\n  const [timeOutCount, setTimeOutCount] = useState(1000);\n\n  useInterval(\n    () => {\n      setCount(count - 1000);\n      if (count < 1999) {\n        setTimeIn(false);\n      }\n    },\n    timeIn ? 1000 : null,\n  );\n\n  useInterval(\n    () => {\n      setTimeOutCount(timeOutCount + 1000);\n    },\n    !timeIn ? 1000 : null,\n  );\n\n  return (\n    <div className=\"doing__timer\">\n      {timeToMmSs(count, ':')}\n      {timeIn ? ('') : (<div className=\"doing__timeout\">\n                        + {timeToMmSs(timeOutCount, ':')}\n                        </div>\n      )}\n      {timeIn ? (<button onClick={onClick} className=\"doing__btn doing__stopbtn--timein\" name=\"timerOff\">정지</button>) \n      : (<button onClick={onClick} className=\"doing__btn doing__stopbtn--timeout\" name=\"timerOff\">정지</button>\n      )}\n    </div>\n  );\n};\n\nconst TimerOff = ({ onClick }) => {\n  return (\n    <div className=\"doing__timer\">\n      25:00\n      <button className=\"doing__btn doing__startbtn\" onClick={onClick} name=\"timerOn\">\n        시작\n      </button>\n    </div>\n  );\n};\n\nconst Timer = ({ doing, onTimer, from, onCreate }) => {\n  const [timerOn, setTimerOn] = useState(false);\n  const [ing, setIng] = useState({});\n  const [loaded, setLoaded] = useState(load(doneLS))\n  const init = () => { setIng(...doing);}\n  \n  useEffect(init, [doing]);\n\n  const handleTimer = e => {\n    setTimerOn(!timerOn);\n    getTimeStamp(!timerOn);\n    onTimer(!timerOn)\n  };\n  \n  const getTimeStamp = timerOn => {\n    if (timerOn) {\n      setIng({...ing,\n          id: Date.now(),\n          start: Date.now(),\n      });\n    }\n    else {\n        setIng({...ing, end: Date.now()});\n        save(doneLS,[...loaded, {...ing, end: Date.now()}]);\n        setLoaded(load(doneLS));\n        onCreate({...ing, end: Date.now()}, from);\n        init();\n    }\n};\n\n  if (timerOn) {\n    return <TimerOn onClick={handleTimer} />;\n  } else {\n    return <TimerOff onClick={handleTimer} />;\n  }\n};\n\nexport default Timer;","import React, { useState } from 'react';\nimport { getTime, timeGap, timeToMmSs } from './../lib/TimeExp';\nimport { groupBy } from './../lib/GroupBy';\nimport './../style.css';\nimport InlineForm from './InlineForm';\n\n\nconst DoneGroup = props => {\n  const [editing, setEditing] = useState(false);\n  const [editingId, setEditingId] = useState('');\n\n  const handleToggleEdit = e => {\n    setEditing(true);\n    setEditingId(parseInt(e.target.id));\n  };\n\n  const handleUpdate = (data, from) => {\n    props.onUpdate(data, from);\n    setEditingId(false);\n  }\n\n  return props.data.map((item, index) => (\n    <div className=\"done-item\" key={item.id} index={index} >\n      <div className=\"done-item__content\">\n        <div className=\"done-item__header\">\n          <div className=\"done-item__title\" id={item.id} onDoubleClick={handleToggleEdit}>\n          {editing &&\n          editingId === item.id ? (\n            <InlineForm\n              item={item}\n              from=\"done\"\n              onUpdate={handleUpdate}\n            />\n          ) : (\n            item.content\n          )}</div>\n          <div className=\"done-item__totaltime\">\n            {timeToMmSs(timeGap(item.start, item.end), 'text')}\n          </div>\n        </div>\n        <div className=\"done__timestamp\">\n          {getTime(item.start, ':')}-{getTime(item.end, ':')}\n        </div>\n      </div>\n    </div>\n  ));\n};\n\n\nconst groupedArray = data => {\n  const sortedDones = data.sort(function(a, b) {\n    return b['start'] - a['start'];});\n  return groupBy('date')(sortedDones);\n}\n\nexport {DoneGroup, groupedArray};\n","export const groupBy = key => array =>\narray.reduce((objectsByKeyValue, obj) => {\n  const value = obj[key];\n  objectsByKeyValue[value] = (objectsByKeyValue[value] || []).concat(obj);\n  return objectsByKeyValue;\n}, {});","import { save } from './LocalStorage';\n\nconst todoLS = 'TODO';\n\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    save(todoLS, result);\n    return result;\n  };\n  \n  const move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n  \n    destClone.splice(droppableDestination.index, 0, removed);\n  \n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n  \n    return result;\n  };\n\n  const getListClass = (name, isDraggingOver, listLength) => {\n    const classList = [\n      `${name}-list`,\n      isDraggingOver ? `${name}-list--isDraggingOver` : '',\n      listLength > 0 ? `${name}-list--isContain` : '',\n    ];\n  \n    return classList.join(' ');\n  };\n  \n  const getItemClass = (name, isDragging) => {\n    const classList = [\n      `${name}-item`,\n      isDragging ? `${name}-item--isDragging` : '',\n    ];\n  \n    return classList.join(' ');\n  };\n\n\n  export { reorder, move, getListClass, getItemClass };","import React, { Component } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport './style.css';\nimport TodoForm from './components/TodoForm';\nimport DeleteBtn from './components/DeleteBtn';\nimport InlineForm from './components/InlineForm';\nimport Timer from './components/Timer';\nimport { save, load } from './lib/LocalStorage';\nimport { DoneGroup, groupedArray } from './components/DoneList';\nimport { reorder, move, getListClass, getItemClass } from './lib/DndLib';\n\nconst todoLS = 'TODO';\nconst doneLS = 'DONE';\n\nclass Dnd extends Component {\n  id = 0;\n  state = {\n    todos: load(todoLS),\n    doings: [],\n    dones: load(doneLS),\n    editing: false,\n    editingId: '',\n    timerOn: false,\n  };\n\n  handleCreate = (data, from) => {\n    if (from === 'todo') {\n      const { todos } = this.state;\n      this.setState({\n        todos: todos.concat({ id: this.id++, ...data }),\n      });\n      save(todoLS, todos.concat({ id: this.id++, ...data }));\n    } else if (from === 'doing') {\n      const { dones } = this.state;\n      this.setState({\n        dones: dones.concat({ id: this.id++, ...data }),\n      });\n\n      // save(todoLS, dones.concat({ id: this.id++, ...data }));\n    }\n  };\n\n  handleRemove = (id, from) => {\n    if (from === 'todo') {\n      const { todos } = this.state;\n      this.setState({\n        todos: todos.filter(item => item.id !== id),\n      });\n      save(\n        todoLS,\n        todos.filter(item => item.id !== id),\n      );\n    } else if (from === 'doing') {\n      const { doings } = this.state;\n      this.setState({\n        doings: doings.filter(item => item.id !== id),\n      });\n    }\n  };\n\n  handleUpdate = (data, from) => {\n    if (from === 'todo') {\n      const { todos } = this.state;\n      this.setState({\n        todos: todos.map(info =>\n          data.id === info.id ? { ...info, ...data } : info,\n        ),\n        editing: false,\n      });\n      save(\n        todoLS,\n        todos.map(info => (data.id === info.id ? { ...info, ...data } : info)),\n      );\n    } else if (from === 'doing') {\n      const { doings } = this.state;\n      this.setState({\n        doings: doings.map(info =>\n          data.id === info.id ? { ...info, ...data } : info,\n        ),\n        editing: false,\n      });\n    } else if (from === 'done') {\n      const { dones } = this.state;\n      this.setState({\n        dones: dones.map(info =>\n          data.id === info.id ? { ...info, ...data } : info,\n        ),\n        editing: false,\n      });\n      save(\n        doneLS,\n        dones.map(info => (data.id === info.id ? { ...info, ...data } : info)),\n      );\n    }\n  };\n\n  getGroupedList = () => {\n    const groupByDate = groupedArray(this.state.dones);\n    return Object.keys(groupByDate).map((key, index) => (\n      <div key={index}>\n        <div className=\"done__date\">{key}</div>\n        <DoneGroup data={groupByDate[key]} onUpdate={this.handleUpdate} />\n      </div>\n    ));\n  };\n\n  handleToggleEdit = e => {\n    const { editing } = this.state;\n    const id = e.target.dataset.rbdDraggableId;\n    this.setState({ editing: !editing });\n    this.setState({ editingId: id });\n  };\n\n  handleToggleTimeon = boolean => {\n    this.setState({ timerOn: boolean });\n  };\n\n  id2List = {\n    todo: 'todos',\n    doing: 'doings',\n  };\n\n  getList = id => this.state[this.id2List[id]];\n\n  onDragEnd = result => {\n    const { source, destination } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const todos = reorder(\n        this.getList(source.droppableId),\n        source.index,\n        destination.index,\n      );\n\n      let state = { todos };\n\n      if (source.droppableId === 'doing') {\n        state = { doings: todos };\n      }\n      this.setState(state);\n    } else {\n      const result = move(\n        this.getList(source.droppableId),\n        this.getList(destination.droppableId),\n        source,\n        destination,\n      );\n\n      this.setState({\n        todos: result.todo,\n        doings: result.doing,\n      });\n\n      save(todoLS, result.todo);\n    }\n  };\n\n  render() {\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <div className=\"todo__container\">\n          <TodoForm from=\"todo\" onCreate={this.handleCreate} />\n\n          <Droppable droppableId=\"todo\">\n            {(provided, snapshot) => (\n              <div\n                ref={provided.innerRef}\n                className={getListClass('todo', snapshot.isDraggingOver)}\n              >\n                {this.state.todos.map((item, index) => (\n                  <Draggable key={item.id} draggableId={item.id} index={index}>\n                    {(provided, snapshot) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={{ ...provided.draggableProps.style }}\n                        className={getItemClass('todo', snapshot.isDragging)}\n                        onDoubleClick={this.handleToggleEdit}\n                      >\n                        {this.state.editing &&\n                        this.state.editingId === item.id ? (\n                          <InlineForm\n                            item={item}\n                            from=\"todo\"\n                            onUpdate={this.handleUpdate}\n                          />\n                        ) : (\n                          item.content\n                        )}\n                        <DeleteBtn\n                          id={item.id}\n                          from=\"todo\"\n                          onRemove={this.handleRemove}\n                        />\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </div>\n        <div className=\"doing__container\">\n          {this.state.doings.length > 0 ? (\n            <div className=\"doing-guide--onStage\">지금 집중해서 할 일</div>\n          ) : (\n            ''\n          )}\n          <Droppable droppableId=\"doing\">\n            {(provided, snapshot) => (\n              <div\n                ref={provided.innerRef}\n                className={getListClass(\n                  'doing',\n                  snapshot.isDraggingOver,\n                  this.state.doings.length,\n                )}\n              >\n                {this.state.doings.length > 0 ? (\n                  ''\n                ) : (\n                  <div className=\"doing-guide\">\n                    {' '}\n                    할 일을 <br /> 여기에 끌어다 놓으세요\n                  </div>\n                )}\n                {this.state.doings.map((item, index) =>\n                  this.state.timerOn ? (\n                    <div key={index} className=\"doing-item--timeOn\">\n                      {item.content}\n                    </div>\n                  ) : (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}\n                    >\n                      {(provided, snapshot) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          style={{ ...provided.draggableProps.style }}\n                          className={getItemClass('doing', snapshot.isDragging)}\n                          onDoubleClick={this.handleToggleEdit}\n                        >\n                          {this.state.editing &&\n                          this.state.editingId === item.id ? (\n                            <InlineForm\n                              item={item}\n                              from=\"doing\"\n                              onUpdate={this.handleUpdate}\n                            />\n                          ) : (\n                            item.content\n                          )}\n                          <DeleteBtn\n                            id={item.id}\n                            from=\"doing\"\n                            onRemove={this.handleRemove}\n                          />\n                        </div>\n                      )}\n                    </Draggable>\n                  ),\n                )}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n          {this.state.doings.length > 0 ? (\n            <Timer\n              onTimer={this.handleToggleTimeon}\n              doing={this.state.doings}\n              onCreate={this.handleCreate}\n              from=\"doing\"\n            />\n          ) : (\n            ''\n          )}\n        </div>\n        <div className=\"done__container\">\n          <div className=\"done-list__title\">\n            완료한 목록\n            <span className={this.state.dones.length > 0 ? 'blind' : ''}>\n              이 여기 쌓여요\n            </span>\n          </div>\n          <div className=\"todo-list\">{this.getGroupedList()}</div>\n        </div>\n      </DragDropContext>\n    );\n  }\n}\n\nexport default Dnd;\n","import React, { Component } from 'react';\nimport Dnd from './Dnd';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n      <header className=\"header\">Hoing <span className=\"header__overline\">집중+뿌듯</span></header>\n      <div className=\"dnd__container\">\n      <Route path=\"/\" component={Dnd} />\n    </div>\n    </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}